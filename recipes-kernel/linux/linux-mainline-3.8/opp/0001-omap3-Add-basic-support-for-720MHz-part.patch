From 67043baaa1b786a99280326f560b710b7bfc335f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andreas=20M=C3=BCller?= <schnitzeltony@googlemail.com>
Date: Wed, 27 Feb 2013 11:15:37 +0100
Subject: [PATCH 1/2] omap3: Add basic support for 720MHz part
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

rework of [1]

https://patchwork.kernel.org/patch/543161/

Signed-off-by: Andreas MÃ¼ller <schnitzeltony@googlemail.com>
---
 arch/arm/mach-omap2/control.h      |    8 +++++
 arch/arm/mach-omap2/id.c           |    9 +++++
 arch/arm/mach-omap2/opp3xxx_data.c |   61 ++++++++++++++++++++++++++++++++++-
 arch/arm/mach-omap2/soc.h          |    2 +
 4 files changed, 78 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-omap2/control.h b/arch/arm/mach-omap2/control.h
index e6c3281..9a2bba5 100644
--- a/arch/arm/mach-omap2/control.h
+++ b/arch/arm/mach-omap2/control.h
@@ -389,6 +389,14 @@
 #define		FEAT_NEON		0
 #define		FEAT_NEON_NONE		1
 
+/*
+ * Product ID register
+ */
+#define OMAP3_PRODID			0x020C
+
+#define OMAP3_SKUID_MASK		0x0f
+#define		OMAP3_SKUID_720MHZ	0x08
+
 
 #ifndef __ASSEMBLY__
 #ifdef CONFIG_ARCH_OMAP2PLUS
diff --git a/arch/arm/mach-omap2/id.c b/arch/arm/mach-omap2/id.c
index 45cc7ed4..12802f4 100644
--- a/arch/arm/mach-omap2/id.c
+++ b/arch/arm/mach-omap2/id.c
@@ -220,6 +220,7 @@ static void __init omap3_cpuinfo(void)
 	OMAP3_SHOW_FEATURE(neon);
 	OMAP3_SHOW_FEATURE(isp);
 	OMAP3_SHOW_FEATURE(192mhz_clk);
+	OMAP3_SHOW_FEATURE(720mhz);
 
 	printk(")\n");
 }
@@ -265,6 +266,14 @@ void __init omap3xxx_check_features(void)
 		omap_features &= ~(OMAP3_HAS_IVA | OMAP3_HAS_ISP);
 
 	/*
+	 * Does it support 720MHz?
+	 */
+	if(cpu_is_omap34xx() && !cpu_is_omap3630()) {
+		status = (OMAP3_SKUID_MASK & read_tap_reg(OMAP3_PRODID));
+		if (status & OMAP3_SKUID_720MHZ)
+			omap_features |= OMAP3_HAS_720MHZ;
+	}
+	/*
 	 * TODO: Get additional info (where applicable)
 	 *       e.g. Size of L2 cache.
 	 */
diff --git a/arch/arm/mach-omap2/opp3xxx_data.c b/arch/arm/mach-omap2/opp3xxx_data.c
index 62772e0..b12b725 100644
--- a/arch/arm/mach-omap2/opp3xxx_data.c
+++ b/arch/arm/mach-omap2/opp3xxx_data.c
@@ -18,11 +18,14 @@
  * GNU General Public License for more details.
  */
 #include <linux/module.h>
+#include <linux/cpu.h>
+#include <linux/opp.h>
 
 #include "soc.h"
 #include "control.h"
 #include "omap_opp_data.h"
 #include "pm.h"
+#include "omap_device.h"
 
 /* 34xx */
 
@@ -33,6 +36,7 @@
 #define OMAP3430_VDD_MPU_OPP3_UV		1200000
 #define OMAP3430_VDD_MPU_OPP4_UV		1270000
 #define OMAP3430_VDD_MPU_OPP5_UV		1350000
+#define OMAP3430_VDD_MPU_OPP6_UV		1350000
 
 struct omap_volt_data omap34xx_vddmpu_volt_data[] = {
 	VOLT_DATA_DEFINE(OMAP3430_VDD_MPU_OPP1_UV, OMAP343X_CONTROL_FUSE_OPP1_VDD1, 0xf4, 0x0c),
@@ -97,6 +101,8 @@ static struct omap_opp_def __initdata omap34xx_opp_def_list[] = {
 	OPP_INITIALIZER("mpu", true, 550000000, OMAP3430_VDD_MPU_OPP4_UV),
 	/* MPU OPP5 */
 	OPP_INITIALIZER("mpu", true, 600000000, OMAP3430_VDD_MPU_OPP5_UV),
+	/* MPU OPP6 */
+	OPP_INITIALIZER("mpu", true, 720000000, OMAP3430_VDD_MPU_OPP6_UV),
 
 	/*
 	 * L3 OPP1 - 41.5 MHz is disabled because: The voltage for that OPP is
@@ -122,6 +128,8 @@ static struct omap_opp_def __initdata omap34xx_opp_def_list[] = {
 	OPP_INITIALIZER("iva", true, 400000000, OMAP3430_VDD_MPU_OPP4_UV),
 	/* DSP OPP5 */
 	OPP_INITIALIZER("iva", true, 430000000, OMAP3430_VDD_MPU_OPP5_UV),
+	/* DSP OPP6 */
+	OPP_INITIALIZER("iva", false, 520000000, OMAP3430_VDD_MPU_OPP6_UV),
 };
 
 static struct omap_opp_def __initdata omap36xx_opp_def_list[] = {
@@ -150,11 +158,56 @@ static struct omap_opp_def __initdata omap36xx_opp_def_list[] = {
 };
 
 /**
+ * omap3_opp_enable_720Mhz() - Enable the OPP corresponding to 720MHz
+ *
+ * This function is executed only if the silicon is capable of
+ * running at the 720MHz see http://www.ti.com/litv/pdf/spruf98x
+ */
+static int __init omap3_opp_enable_720Mhz(void)
+{
+	int r = -ENODEV;
+	struct device *mpu_dev, *iva_dev;
+
+	/* MPU */
+	mpu_dev = get_cpu_device(0);
+	if (IS_ERR(mpu_dev)) {
+		pr_err("%s: No mpu_dev found: %p\n",
+			__func__, mpu_dev);
+	}
+	else {
+		r = opp_enable(mpu_dev, 720000000);
+		if(r) {
+			pr_err("%s: opp_enable() failed for mpu@720MHz: %d\n",
+				__func__, r);
+		}
+		/* IVA */
+		else if (omap3_has_iva()) {
+			iva_dev = omap_device_get_by_hwmod_name("iva");
+			if (IS_ERR(iva_dev)) {
+				pr_err("%s: No iva_dev found: %p\n",
+					__func__, iva_dev);
+			}
+			else {
+				r = opp_enable(iva_dev, 520000000);
+				if (r)
+					pr_err("%s: opp_enable() failed for iva@520MHz: %d\n",
+						__func__, r);
+			}
+		}
+	}
+
+	return r;
+}
+
+
+/**
  * omap3_opp_init() - initialize omap3 opp table
  */
 int __init omap3_opp_init(void)
 {
-	int r = -ENODEV;
+	int r;
+
+	r = -ENODEV;
 
 	if (!cpu_is_omap34xx())
 		return r;
@@ -162,9 +215,13 @@ int __init omap3_opp_init(void)
 	if (cpu_is_omap3630())
 		r = omap_init_opp_table(omap36xx_opp_def_list,
 			ARRAY_SIZE(omap36xx_opp_def_list));
-	else
+	else {
 		r = omap_init_opp_table(omap34xx_opp_def_list,
 			ARRAY_SIZE(omap34xx_opp_def_list));
+		/* runtime detection of 720MHz */
+		if (omap3_has_720mhz())
+			r = omap3_opp_enable_720Mhz();
+	}
 
 	return r;
 }
diff --git a/arch/arm/mach-omap2/soc.h b/arch/arm/mach-omap2/soc.h
index f31d907..850e3c1 100644
--- a/arch/arm/mach-omap2/soc.h
+++ b/arch/arm/mach-omap2/soc.h
@@ -436,6 +436,7 @@ extern u32 omap_features;
 #define OMAP3_HAS_SDRC			BIT(7)
 #define OMAP3_HAS_IO_CHAIN_CTRL		BIT(8)
 #define OMAP4_HAS_PERF_SILICON		BIT(9)
+#define OMAP3_HAS_720MHZ		BIT(10)
 
 
 #define OMAP3_HAS_FEATURE(feat,flag)			\
@@ -453,6 +454,7 @@ OMAP3_HAS_FEATURE(192mhz_clk, 192MHZ_CLK)
 OMAP3_HAS_FEATURE(io_wakeup, IO_WAKEUP)
 OMAP3_HAS_FEATURE(sdrc, SDRC)
 OMAP3_HAS_FEATURE(io_chain_ctrl, IO_CHAIN_CTRL)
+OMAP3_HAS_FEATURE(720mhz, 720MHZ)
 
 /*
  * Runtime detection of OMAP4 features
-- 
1.7.6.5

