From c9916bc5475cc5a79eb8a7835e0b50e9681db0a4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andreas=20M=C3=BCller?= <schnitzeltony@googlemail.com>
Date: Sat, 26 May 2012 14:07:49 +0200
Subject: [PATCH] board-overo.c: use sakoman's board init code
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

see http://www.sakoman.com/cgi-bin/gitweb.cgi?p=linux-omap-2.6.git;a=shortlog;h=refs/heads/omap-3.2

Signed-off-by: Andreas MÃ¼ller <schnitzeltony@googlemail.com>
---
 arch/arm/mach-omap2/board-overo.c |  195 +++++++++++++++++++++++++++++++++++--
 1 files changed, 187 insertions(+), 8 deletions(-)

diff --git a/arch/arm/mach-omap2/board-overo.c b/arch/arm/mach-omap2/board-overo.c
index 4cf7aea..f9fdb63 100644
--- a/arch/arm/mach-omap2/board-overo.c
+++ b/arch/arm/mach-omap2/board-overo.c
@@ -26,6 +26,7 @@
 #include <linux/io.h>
 #include <linux/gpio.h>
 #include <linux/kernel.h>
+#include <linux/opp.h>
 #include <linux/platform_device.h>
 #include <linux/i2c/twl.h>
 #include <linux/regulator/machine.h>
@@ -44,6 +45,7 @@
 
 #include <plat/board.h>
 #include <plat/common.h>
+#include <plat/omap_device.h>
 #include <video/omapdss.h>
 #include <video/omap-panel-generic-dpi.h>
 #include <video/omap-panel-dvi.h>
@@ -55,6 +57,7 @@
 #include <plat/usb.h>
 
 #include "mux.h"
+#include "pm.h"
 #include "sdram-micron-mt46h32m32lf-6.h"
 #include "hsmmc.h"
 #include "common-board-devices.h"
@@ -71,6 +74,70 @@
 #define OVERO_SMSC911X2_CS     4
 #define OVERO_SMSC911X2_GPIO   65
 
+#if defined(CONFIG_VIDEO_OMAP3) || defined(CONFIG_VIDEO_OMAP3_MODULE)
+
+#include <media/mt9v032.h>
+#include "devices.h"
+#include "../../../drivers/media/video/omap3isp/isp.h"
+
+#define MT9V032_I2C_ADDR	0x5C
+#define MT9V032_I2C_BUS_NUM	3
+#define MT9V032_XCLK		ISP_XCLK_A
+
+static void mt9v032_set_clock(struct v4l2_subdev *subdev, int hz)
+{
+	struct isp_device *isp = v4l2_dev_to_isp_device(subdev->v4l2_dev);
+
+	printk("overo: setting xclk to %d hz\n", hz);
+	isp->platform_cb.set_xclk(isp, hz, MT9V032_XCLK);
+}
+
+static struct mt9v032_platform_data mt9v032_platform_data = {
+	.clk_pol		= 0,
+	.set_clock               = mt9v032_set_clock,
+};
+
+static struct i2c_board_info mt9v032_i2c_device = {
+	I2C_BOARD_INFO("mt9v032", MT9V032_I2C_ADDR),
+	.platform_data = &mt9v032_platform_data,
+};
+
+static struct isp_subdev_i2c_board_info mt9v032_subdevs[] = {
+	{
+		.board_info = &mt9v032_i2c_device,
+		.i2c_adapter_id = MT9V032_I2C_BUS_NUM,
+	},
+	{ NULL, 0, },
+};
+
+static struct isp_v4l2_subdevs_group overo_camera_subdevs[] = {
+	{
+		.subdevs = mt9v032_subdevs,
+		.interface = ISP_INTERFACE_PARALLEL,
+		.bus = {
+				.parallel = {
+					.data_lane_shift = 0,
+					.clk_pol = 0,
+					.bridge = ISPCTRL_PAR_BRIDGE_DISABLE,
+				}
+		},
+	},
+	{ NULL, 0, },
+};
+
+static struct isp_platform_data overo_isp_platform_data = {
+	.subdevs = overo_camera_subdevs,
+};
+
+static int __init overo_camera_init(void)
+{
+       return omap3_init_camera(&overo_isp_platform_data);
+}
+
+#else
+static inline void overo_camera_init(void) { return; }
+#endif
+
 #if defined(CONFIG_TOUCHSCREEN_ADS7846) || \
 	defined(CONFIG_TOUCHSCREEN_ADS7846_MODULE)
 
@@ -144,6 +211,7 @@ static void __init overo_init_smsc911x(void)
 static inline void __init overo_init_smsc911x(void) { return; }
 #endif
 
+#if defined(CONFIG_PANEL_DVI) || defined(CONFIG_PANEL_DVI_MODULE)
 /* DSS */
 static int lcd_enabled;
 static int dvi_enabled;
@@ -265,6 +333,7 @@ static struct omap_dss_board_info overo_dss_data = {
 	.devices	= overo_dss_devices,
 	.default_device	= &overo_dvi_device,
 };
+#endif
 
 static struct mtd_partition overo_nand_partitions[] = {
 	{
@@ -446,9 +515,28 @@ static struct twl4030_platform_data overo_twldata = {
 
 static int __init overo_i2c_init(void)
 {
-	omap3_pmic_get_config(&overo_twldata,
-			TWL_COMMON_PDATA_USB | TWL_COMMON_PDATA_AUDIO,
-			TWL_COMMON_REGULATOR_VDAC | TWL_COMMON_REGULATOR_VPLL2);
+	u32 pdata_flags = 0;
+	u32 regulators_flags = TWL_COMMON_REGULATOR_VPLL2;
+
+#if defined(CONFIG_USB_MUSB_HDRC) || \
+	defined (CONFIG_USB_MUSB_HDRC_MODULE)
+	pdata_flags |= TWL_COMMON_PDATA_USB;
+#endif
+#if defined(CONFIG_MFD_TWL4030_AUDIO) || \
+	defined (CONFIG_MFD_TWL4030_AUDIO_MODULE)
+	pdata_flags |= TWL_COMMON_PDATA_AUDIO;
+#endif
+#if defined(CONFIG_TWL4030_MADC) || \
+	defined (CONFIG_TWL4030_MADC_MODULE)
+	pdata_flags |= TWL_COMMON_PDATA_MADC;
+#endif
+
+#if defined(CONFIG_OMAP2_DSS) || defined(CONFIG_OMAP2_DSS_MODULE)
+	regulators_flags |= TWL_COMMON_REGULATOR_VDAC;
+#endif
+
+	omap3_pmic_get_config(&overo_twldata, pdata_flags,
+			      regulators_flags);
 
 	overo_twldata.vpll2->constraints.name = "VDVI";
 
@@ -459,6 +547,18 @@ static int __init overo_i2c_init(void)
 }
 
 static struct spi_board_info overo_spi_board_info[] __initdata = {
+
+#if !defined(CONFIG_TOUCHSCREEN_ADS7846) && \
+	!defined(CONFIG_TOUCHSCREEN_ADS7846_MODULE) && \
+	(defined(CONFIG_SPI_SPIDEV) || defined(CONFIG_SPI_SPIDEV_MODULE))
+	{
+		.modalias		= "spidev",
+		.bus_num		= 1,
+		.chip_select		= 0,
+		.max_speed_hz		= 48000000,
+		.mode			= SPI_MODE_0,
+	},
+#endif
 #if defined(CONFIG_PANEL_LGPHILIPS_LB035Q02) || \
 	defined(CONFIG_PANEL_LGPHILIPS_LB035Q02_MODULE)
 	{
@@ -468,6 +568,14 @@ static struct spi_board_info overo_spi_board_info[] __initdata = {
 		.max_speed_hz		= 500000,
 		.mode			= SPI_MODE_3,
 	},
+#elif defined(CONFIG_SPI_SPIDEV) || defined(CONFIG_SPI_SPIDEV_MODULE)
+	{
+		.modalias		= "spidev",
+		.bus_num		= 1,
+		.chip_select		= 1,
+		.max_speed_hz		= 48000000,
+		.mode			= SPI_MODE_0,
+	},
 #endif
 };
 
@@ -479,6 +587,8 @@ static int __init overo_spi_init(void)
 	return 0;
 }
 
+#if defined(CONFIG_USB_EHCI_HCD_OMAP) || \
+	defined (CONFIG_USB_EHCI_HCD_OMAP_MODULE)
 static const struct usbhs_omap_board_data usbhs_bdata __initconst = {
 	.port_mode[0] = OMAP_USBHS_PORT_MODE_UNUSED,
 	.port_mode[1] = OMAP_EHCI_PORT_MODE_PHY,
@@ -489,6 +599,14 @@ static const struct usbhs_omap_board_data usbhs_bdata __initconst = {
 	.reset_gpio_port[2]  = -EINVAL
 };
 
+static inline void __init overo_init_usbhs(void)
+{
+	usbhs_init(&usbhs_bdata);
+}
+#else
+static inline void __init overo_init_usbhs(void) { return; }
+#endif
+
 #ifdef CONFIG_OMAP_MUX
 static struct omap_board_mux board_mux[] __initdata = {
 	{ .reg_offset = OMAP_MUX_TERMINATOR },
@@ -500,25 +618,86 @@ static struct gpio overo_bt_gpios[] __initdata = {
 	{ OVERO_GPIO_BT_NRESET, GPIOF_OUT_INIT_HIGH,	"lcd bl enable" },
 };
 
+static void __init overo_opp_init(void)
+{
+	int r = 0;
+
+	/* Initialize the omap3 opp table */
+	if (omap3_opp_init()) {
+		pr_err("%s: opp default init failed\n", __func__);
+		return;
+	}
+
+	/* Custom OPP enabled for 36/3730 */
+	if (cpu_is_omap3630()) {
+		struct device *mpu_dev, *iva_dev;
+
+		mpu_dev = omap_device_get_by_hwmod_name("mpu");
+
+		if (omap3_has_iva())
+			iva_dev = omap_device_get_by_hwmod_name("iva");
+
+		if (!mpu_dev) {
+			pr_err("%s: Aiee.. no mpu device? %p\n",
+				__func__, mpu_dev);
+			return;
+		}
+		/* Enable MPU 1GHz and lower opps */
+		r = opp_enable(mpu_dev, 800000000);
+		r |= opp_enable(mpu_dev, 1000000000);
+
+		if (omap3_has_iva()) {
+			/* Enable IVA 800MHz and lower opps */
+			r |= opp_enable(iva_dev, 660000000);
+			r |= opp_enable(iva_dev, 800000000);
+		}
+
+		if (r) {
+			pr_err("%s: failed to enable higher opp %d\n",
+				__func__, r);
+			opp_disable(mpu_dev, 800000000);
+			opp_disable(mpu_dev, 1000000000);
+			if (omap3_has_iva()) {
+				opp_disable(iva_dev, 660000000);
+				opp_disable(iva_dev, 800000000);
+			}
+		}
+	}
+	return;
+}
+
+#if defined(CONFIG_USB_MUSB_HDRC) || \
+	defined (CONFIG_USB_MUSB_HDRC_MODULE)
+static inline void __init overo_init_musb(void)
+{
+	usb_musb_init(NULL);
+}
+#else
+static inline void __init overo_init_musb(void) { return; }
+#endif
+
 static void __init overo_init(void)
 {
 	int ret;
 
 	omap3_mux_init(board_mux, OMAP_PACKAGE_CBB);
 	overo_i2c_init();
+#if defined(CONFIG_PANEL_GENERIC_DPI) || defined(CONFIG_PANEL_GENERIC_DPI_MODULE)
 	omap_display_init(&overo_dss_data);
+	overo_display_init();
+#endif
 	omap_serial_init();
-	omap_sdrc_init(mt46h32m32lf6_sdrc_params,
-				  mt46h32m32lf6_sdrc_params);
+	omap_sdrc_init(NULL, NULL);
 	omap_nand_flash_init(0, overo_nand_partitions,
 			     ARRAY_SIZE(overo_nand_partitions));
-	usb_musb_init(NULL);
-	usbhs_init(&usbhs_bdata);
+	overo_init_musb();
+	overo_init_usbhs();
 	overo_spi_init();
 	overo_init_smsc911x();
-	overo_display_init();
 	overo_init_led();
 	overo_init_keys();
+	overo_opp_init();
+	overo_camera_init();
 
 	/* Ensure SDRC pins are mux'd for self-refresh */
 	omap_mux_init_signal("sdrc_cke0", OMAP_PIN_OUTPUT);
-- 
1.7.4.4

