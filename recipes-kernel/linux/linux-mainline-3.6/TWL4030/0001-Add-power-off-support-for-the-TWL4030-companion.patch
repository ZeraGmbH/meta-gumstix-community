From 8c61d353c2cf401deb5604d95fedb553b2542531 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andreas=20M=C3=BCller?= <schnitzeltony@googlemail.com>
Date: Thu, 2 Aug 2012 21:56:06 +0200
Subject: [PATCH] Add power-off support for the TWL4030 companion
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

code taken from [1]

[1] http://www.sakoman.com/cgi-bin/gitweb.cgi?p=linux-omap-2.6.git;a=commitdiff_plain;h=73dfc12c73748d30e0998bab6755385dadd78650

Signed-off-by: Andreas MÃ¼ller <schnitzeltony@googlemail.com>
---
 drivers/mfd/Kconfig    |    6 ++++++
 drivers/mfd/twl-core.c |   40 ++++++++++++++++++++++++++++++++++++++++
 2 files changed, 46 insertions(+), 0 deletions(-)

diff --git a/drivers/mfd/Kconfig b/drivers/mfd/Kconfig
index e129c82..8588fc9 100644
--- a/drivers/mfd/Kconfig
+++ b/drivers/mfd/Kconfig
@@ -272,6 +272,12 @@ config MFD_TWL4030_AUDIO
 	select MFD_CORE
 	default n
 
+config TWL4030_POWEROFF
+	bool "TWL4030 Allow power-off on shutdown"
+	depends on TWL4030_CORE
+	help
+	  Enables the CPU to power-off the system on shutdown
+
 config TWL6030_PWM
 	tristate "TWL6030 PWM (Pulse Width Modulator) Support"
 	depends on TWL4030_CORE
diff --git a/drivers/mfd/twl-core.c b/drivers/mfd/twl-core.c
index 6fc90be..9b619b2 100644
--- a/drivers/mfd/twl-core.c
+++ b/drivers/mfd/twl-core.c
@@ -127,6 +127,13 @@
 #define twl_has_bci()	false
 #endif
 
+#if defined (CONFIG_TWL4030_POWEROFF)
+#define twl_has_poweroff()	true
+#else
+#define twl_has_poweroff()	false
+#endif
+
+
 /* Triton Core internal information (BEGIN) */
 
 /* Last - for index max*/
@@ -1212,6 +1219,33 @@ static int twl_remove(struct i2c_client *client)
 	return 0;
 }
 
+#define PWR_P1_SW_EVENTS	0x10
+#define PWR_DEVOFF		(1 << 0)
+
+static void twl_poweroff(void)
+{
+	int err;
+	u8 val;
+
+	err = twl_i2c_read_u8(TWL4030_MODULE_PM_MASTER, &val,
+				  PWR_P1_SW_EVENTS);
+	if (err) {
+		pr_err("%s: i2c error %d while reading TWL4030"
+			"PM_MASTER P1_SW_EVENTS\n",
+			DRIVER_NAME, err);
+		return;
+	}
+
+	val |= PWR_DEVOFF;
+
+	err = twl_i2c_write_u8(TWL4030_MODULE_PM_MASTER, val,
+				   PWR_P1_SW_EVENTS);
+	if (err)
+		pr_err("%s: i2c error %d while writing TWL4030"
+			"PM_MASTER P1_SW_EVENTS\n",
+			DRIVER_NAME, err);
+}
+
 /* NOTE: This driver only handles a single twl4030/tps659x0 chip */
 static int __devinit
 twl_probe(struct i2c_client *client, const struct i2c_device_id *id)
@@ -1322,6 +1356,12 @@ twl_probe(struct i2c_client *client, const struct i2c_device_id *id)
 		twl_i2c_write_u8(TWL4030_MODULE_INTBR, temp, REG_GPPUPDCTR1);
 	}
 
+	if(twl_has_poweroff())
+	{
+		/* initialize pm_power_off routine */
+		pm_power_off = twl_poweroff;
+	}
+
 	status = -ENODEV;
 	if (node)
 		status = of_platform_populate(node, NULL, NULL, &client->dev);
-- 
1.7.6.5

